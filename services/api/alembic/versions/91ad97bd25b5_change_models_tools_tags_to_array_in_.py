"""Change models, tools, tags to ARRAY in prompt_versions

Revision ID: 91ad97bd25b5
Revises: 0002_add_prompt_fk_constraints
Create Date: 2025-08-06 11:26:39.833963

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '91ad97bd25b5'
down_revision = '0002_add_prompt_fk_constraints'
branch_labels = None
depends_on = None


def upgrade():
    # Only alter models, tools, tags columns to ARRAY(String)
    from sqlalchemy.dialects import postgresql
    op.alter_column('prompt_versions', 'models',
        existing_type=postgresql.ARRAY(postgresql.TEXT()),
        type_=postgresql.ARRAY(sa.String()),
        existing_nullable=False)
    op.alter_column('prompt_versions', 'tools',
        existing_type=postgresql.ARRAY(postgresql.TEXT()),
        type_=postgresql.ARRAY(sa.String()),
        existing_nullable=True)
    op.alter_column('prompt_versions', 'tags',
        existing_type=postgresql.ARRAY(postgresql.TEXT()),
        type_=postgresql.ARRAY(sa.String()),
        existing_nullable=True)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('prompts_created_by_fkey'), 'prompts', 'users', ['created_by'], ['id'])
    op.create_foreign_key(op.f('fk_prompts_latest_version_id'), 'prompts', 'prompt_versions', ['latest_version_id'], ['id'])
    op.create_unique_constraint(op.f('prompts_slug_key'), 'prompts', ['slug'], postgresql_nulls_not_distinct=False)
    op.alter_column('prompts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('prompts', 'slug',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'prompt_versions', type_='foreignkey')
    op.create_foreign_key(op.f('fk_prompt_versions_prompt_id'), 'prompt_versions', 'prompts', ['prompt_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_prompt_versions_prompt_id_version'), 'prompt_versions', ['prompt_id', 'version'], unique=True)
    op.alter_column('prompt_versions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('prompt_versions', 'visibility',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'private'::text"))
    op.alter_column('prompt_versions', 'body',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('prompt_versions', 'tags',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('prompt_versions', 'tools',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.alter_column('prompt_versions', 'models',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=False)
    op.alter_column('prompt_versions', 'purpose',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('prompt_versions', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('prompt_versions', 'version',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('prompt_versions', 'prompt_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
